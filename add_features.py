# Step 3: Data Cleaning
# We took the pairs of features obtained from correlations obtained (about 200 pairs) and created new features from these by taking the difference between 
# the pairs of features and hence obtained 200 new features. This was done in an attempt to solve the issue of overfitting due to the noise in the original features

def makeFeatures(df, flist):
    
    #The features listed below were the ones identified as having the highest correlation after running the above correlation function
    #flist = {('f770', 'f52'), ('f553', 'f532'), ('f483', 'f117'), ('f633', 'f408'), ('f729', 'f644'), ('f722', 'f408'), ('f770', 'f345'), ('f559', 'f246'), ('f729', 'f408'), ('f644', 'f74'), ('f644', 'f354'), ('f417', 'f42'), ('f558', 'f244'), ('f527', 'f274'), ('f608', 'f7'), ('f528', 'f527'), ('f608', 'f478'), ('f559', 'f245'), ('f633', 'f379'), ('f770', 'f42'), ('f504', 'f503'), ('f345', 'f58'), ('f553', 'f8'), ('f569', 'f568'), ('f722', 'f633'), ('f74', 'f36'), ('f354', 'f36'), ('f379', 'f52'), ('f608', 'f488'), ('f767', 'f405'), ('f559', 'f558'), ('f633', 'f427'), ('f494', 'f98'), ('f568', 'f255'), ('f559', 'f247'), ('f770', 'f362'), ('f362', 'f58'), ('f504', 'f106'), ('f633', 'f36'), ('f582', 'f8'), ('f493', 'f98'), ('f484', 'f118'), ('f417', 'f58'), ('f417', 'f36'), ('f577', 'f267'), ('f644', 'f371'), ('f427', 'f58'), ('f371', 'f58'), ('f452', 'f85'), ('f548', 'f234'), ('f770', 'f644'), ('f493', 'f95'), ('f408', 'f74'), ('f408', 'f354'), ('f539', 'f225'), ('f494', 'f96'), ('f729', 'f52'), ('f58', 'f52'), ('f578', 'f577'), ('f484', 'f483'), ('f354', 'f52'), ('f74', 'f52'), ('f379', 'f36'), ('f543', 'f8'), ('f569', 'f255'), ('f453', 'f452'), ('f770', 'f633'), ('f371', 'f52'), ('f770', 'f36'), ('f578', 'f267'), ('f569', 'f257'), ('f722', 'f42'), ('f453', 'f87'), ('f644', 'f417'), ('f345', 'f36'), ('f427', 'f42'), ('f568', 'f257'), ('f417', 'f408'), ('f741', 'f633'), ('f722', 'f36'), ('f493', 'f96'), ('f452', 'f88'), ('f569', 'f254'), ('f345', 'f42'), ('f427', 'f36'), ('f504', 'f108'), ('f362', 'f52'), ('f539', 'f224'), ('f568', 'f254'), ('f483', 'f118'), ('f453', 'f85'), ('f741', 'f644'), ('f578', 'f266'), ('f558', 'f246'), ('f722', 'f644'), ('f644', 'f36'), ('f770', 'f722'), ('f549', 'f548'), ('f528', 'f274'), ('f379', 'f58'), ('f453', 'f88'), ('f768', 'f406'), ('f549', 'f235'), ('f539', 'f227'), ('f452', 'f87'), ('f578', 'f265'), ('f770', 'f417'), ('f549', 'f236'), ('f408', 'f345'), ('f729', 'f58'), ('f494', 'f493'), ('f504', 'f107'), ('f503', 'f108'), ('f379', 'f42'), ('f770', 'f741'), ('f408', 'f52'), ('f532', 'f8'), ('f494', 'f95'), ('f427', 'f408'), ('f503', 'f105'), ('f408', 'f42'), ('f417', 'f52'), ('f484', 'f115'), ('f577', 'f264'), ('f741', 'f42'), ('f608', 'f467'), ('f362', 'f36'), ('f484', 'f116'), ('f538', 'f226'), ('f770', 'f371'), ('f543', 'f532'), ('f408', 'f371'), ('f577', 'f266'), ('f633', 'f417'), ('f770', 'f729'), ('f644', 'f379'), ('f741', 'f52'), ('f408', 'f362'), ('f563', 'f8'), ('f568', 'f256'), ('f484', 'f117'), ('f578', 'f264'), ('f548', 'f237'), ('f644', 'f362'), ('f371', 'f36'), ('f539', 'f538'), ('f608', 'f498'), ('f625', 'f389'), ('f569', 'f256'), ('f74', 'f58'), ('f354', 'f58'), ('f549', 'f237'), ('f453', 'f86'), ('f644', 'f345'), ('f558', 'f247'), ('f741', 'f36'), ('f644', 'f52'), ('f371', 'f42'), ('f563', 'f532'), ('f729', 'f42'), ('f633', 'f371'), ('f722', 'f58'), ('f644', 'f42'), ('f538', 'f225'), ('f770', 'f58'), ('f74', 'f42'), ('f354', 'f42'), ('f427', 'f52'), ('f549', 'f234'), ('f770', 'f408'), ('f494', 'f97'), ('f770', 'f74'), ('f539', 'f226'), ('f770', 'f354'), ('f408', 'f58'), ('f452', 'f86'), ('f483', 'f115'), ('f722', 'f52'), ('f608', 'f439'), ('f573', 'f8'), ('f538', 'f227'), ('f559', 'f244'), ('f608', 'f457'), ('f483', 'f116'), ('f644', 'f58'), ('f362', 'f42'), ('f770', 'f379'), ('f582', 'f532'), ('f644', 'f427'), ('f408', 'f379'), ('f729', 'f633'), ('f503', 'f106'), ('f573', 'f532'), ('f633', 'f345'), ('f558', 'f245'), ('f741', 'f58'), ('f503', 'f107'), ('f729', 'f36'), ('f741', 'f408'), ('f548', 'f236'), ('f633', 'f362'), ('f345', 'f52'), ('f52', 'f42'), ('f548', 'f235'), ('f633', 'f74'), ('f504', 'f105'), ('f633', 'f354'), ('f577', 'f265'), ('f608', 'f508'), ('f644', 'f408'), ('f52', 'f36'), ('f58', 'f36'), ('f493', 'f97'), ('f770', 'f427'), ('f538', 'f224'), ('f42', 'f36')}

    newdf = pd.DataFrame()
    for feature in flist: # for each feature pair in the list
        name = str(feature[0])+"_"+str(feature[1]) 
        newdf[name] = df[feature[0]].sub(df[feature[1]], axis=0) #take the difference of the pair and append it to a new dataframe

    return newdf